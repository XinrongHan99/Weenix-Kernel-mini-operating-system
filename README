# Weenix Kernel Project

## Overview

The Weenix Kernel is a custom operating system kernel developed in Spring 2023 as a collaborative effort. This project aims to explore the intricacies of operating system design and implementation. The Weenix OS kernel is written in C and tested extensively on the QEMU emulator, with GDB used for debugging purposes.

## Key Features

- **Process and Thread Management**: Implementation of efficient process scheduling and thread management to ensure smooth multitasking and resource allocation.
- **Mutex, Signal, and Interrupt Handlers**: Enhanced system responsiveness and stability through robust mutex, signal, and interrupt handling mechanisms.
- **Virtual Memory Management**: A sophisticated virtual memory management system featuring a well-organized page table and reliable page fault handling.
- **Extensive Testing and Debugging**: Rigorous testing on the QEMU platform, coupled with GDB for in-depth debugging and error resolution.

## Documentation

Detailed documentation is maintained to elucidate the system design and operational aspects. This serves as a valuable resource for knowledge sharing and collaboration within the team.

## Getting Started

### Download and install dependencies.

   On recent versions of Ubuntu or Debian, you can simply run:

   $ sudo apt-get install git-core build-essential gcc gdb qemu genisoimage make python python-argparse cscope xterm bash grub xorriso

   or on Redhat:

   $ sudo yum install git-core gcc gdb qemu genisoimage make python python-argparse cscope xterm bash grub2-tools xorriso

### Compile Weenix:

   $ make

### Invoke Weenix:

   $ ./weenix -n

   or, to run Weenix under gdb, run:

   $ ./weenix -n -d gdb
